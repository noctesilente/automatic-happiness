<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section01.xml.MenuMapper">

    <resultMap id="menuResultMap" type="com.ohgiraffers.section01.xml.MenuDTO">
        <id property="menuCode" column="MENU_CODE"/>
        <result property="menuName" column="MENU_NAME"/>
        <result property="menuPrice" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>

    <!--
        설명.
         OGNL(Object Graph Navigation Language)
         : single quotation('') 구간의 값은 리터럴 값으로 보고 그게 아닌 이름은 객체 필드 또는 변수로
           인식하게 작성하는 기법이다.

        필기.
         1. gte(>=): greater than equal
         2. gt(>): greater than
         3. lte(<=): less than equal
         4. lt(<): less than
         5. eq(==): equal
         6. ne(!=): not equal

    -->
    <select id="selectMenuByPrice" parameterType="_int" resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.ORDERABLE_STATUS = 'Y'
        <if test="maxPrice gte 0 and maxPrice lte 10000">
            <!--        gte = greater than equal = 크거나 같다, lte = less than equal = 작거나 같다  -이런 표현식을 OGNL 표현식이라고 함 -->
            <!--            < 를 여기서 쓰면 인식해버리기 때문에 앞에 <![CDATA 등을 추가하고 OGNL 표현식으로 표현 -->
            <![CDATA[
            AND A.MENU_PRICE < #{ maxPrice }
            ]]>
        </if>
        <if test="maxPrice gt 10000 and maxPrice lte 20000">
            <![CDATA[
            AND A.MENU_PRICE BETWEEN 10000 AND #{ maxPrice }
            ]]>
        </if>
        <if test="maxPrice gt 20000 and maxPrice lte 30000">
            <![CDATA[
            AND A.MENU_PRICE BETWEEN 20000 AND #{ maxPrice }
            ]]>
        </if>
        <if test="maxPrice gt 30000">
            <![CDATA[
            AND A.MENU_PRICE BETWEEN 30000 AND #{ maxPrice }
            ]]>
        </if>
    </select>

    <select id="searchMenu" parameterType="com.ohgiraffers.section01.xml.SearchCriteria" resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        <if test="condition == 'category'">
            JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE = B.CATEGORY_CODE)
        </if>
        WHERE A.ORDERABLE_STATUS = 'Y'
        <if test="condition == 'name'">
            AND A.MENU_NAME LIKE CONCAT('%', #{value}, '%')
            <!--            사용자가 입력한 value 값은 like 문으로 활용되는 것-->
        </if>
        <if test="condition == 'category'">
            AND B.CATEGORY_NAME = #{value}
        </if>
        ORDER BY 1 DESC
    </select>

    <select id="searchMenuBySupCategory"
            parameterType="com.ohgiraffers.section01.xml.SearchCriteria"
            resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.ORDERABLE_STATUS = 'Y'
        <choose>
            <when test="value == '식사'">
                AND A.CATEGORY_CODE IN (4, 5, 6, 7)
            </when>
            <when test="value == '음료'">
                AND A.CATEGORY_CODE IN (8, 9, 10)
            </when>
            <when test="value == '디저트'">
                AND A.CATEGORY_CODE IN (11, 12)
            </when>
        </choose>
    </select>

    <select id="searchMenuByRandomMenuCode" resultMap="menuResultMap">
        SELECT
        A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        <!--        WHERE A.ORDERABLE_STATUS = 'Y'-->
        WHERE A.MENU_CODE IN

        <!-- 설명. list 또는 map과 같은 컬렉션 타이븡로 넘어온 값을 가지고 반복해서 원하는 sql을 작성할 수 있다. -->
        <foreach collection="list"
                 item="menuCode" open="(" close=")" separator=", ">
            #{menuCode}
        </foreach>

        <!-- 설명. 원하는 곳에 있는 메소드의 반환 값을 바로 활용할 수도 있다.(권장되진 않음) -->
        <!--        <foreach collection="@com.ohgiraffers.section01.xml.Application@generateRandomMenuCodeList()"-->
        <!--                 item="menuCode" open="(" close=")" separator=", ">-->
        <!--            #{menuCode}-->
        <!--        </foreach>-->
    </select>

    <select id="searchMenuByCodeOrSearchAll" parameterType="com.ohgiraffers.section01.xml.SearchCriteria"
            resultMap="menuResultMap">
        SELECT
              A.MENU_CODE
            , A.MENU_NAME
            , A.MENU_PRICE
            , A.CATEGORY_CODE
            , A.ORDERABLE_STATUS
        FROM TBL_MENU A
        <if test="condition != null and condition eq 'menuCode'">
            WHERE A.MENU_CODE = #{value}
<!--            4개를 조건으로 걸었는데 맨처음 조건을 만족 못 하면 AND 로 시작하게 됨 -> 그럼 다 일일이 WHERE로 바꿔줘야 함-->
        </if>
    </select>

    <select id="searchMenuByNameOrCategory"
            parameterType="hashmap"
            resultMap="menuResultMap">
        SELECT
          A.MENU_CODE
        , A.MENU_NAME
        , A.MENU_PRICE
        , A.CATEGORY_CODE
        , A.ORDERABLE_STATUS
         FROM TBL_MENU A
<!--        <where>-->
<!--&lt;!&ndash;            if 문 안에는 where 안 쓰고 이렇게 크게 달아주기&ndash;&gt;-->
<!--            <if test="nameValue != null">-->
<!--                A.MENU_NAME LIKE CONCAT('%', #{ nameValue }, '%')-->
<!--            </if>-->
<!--            <if test="categoryValue != null">-->
<!--                AND A.CATEGORY_CODE = #{ categoryValue }-->
<!--            </if>-->
<!--        </where>-->

        <trim prefix="WHERE" prefixOverrides="AND | OR">
<!--            앞에 다 WHERE을 붙이되 AND나 OR가 있는 것들도 다 WHERE로 바꿔줌-->
            <if test="nameValue != null">
                A.MENU_NAME LIKE CONCAT('%', #{ nameValue }, '%')
            </if>
            <if test="categoryValue != null">
                AND A.CATEGORY_CODE = #{ categoryValue }
            </if>
        </trim>
    </select>

    <update id="updateMenu" parameterType="hashmap">
        UPDATE
            TBL_MENU
<!--        <set>-->
<!--            <if test="menuName != null and menuName != ''">-->
<!--                MENU_NAME = #{menuName}-->
<!--            </if>-->
<!--            <if test="orderableStatus != null and orderableStatus != ''">-->
<!--                , ORDERABLE_STATUS = #{orderableStatus}-->
<!--            </if>-->
<!--        </set>-->

        <trim prefix="SET" prefixOverrides=",">
            <if test="menuName != null and menuName != ''">
                MENU_NAME = #{menuName}
            </if>
            <if test="orderableStatus != null and orderableStatus != ''">
                , ORDERABLE_STATUS = #{orderableStatus}
            </if>
        </trim>
            WHERE MENU_CODE = #{menuCode}
    </update>
</mapper>